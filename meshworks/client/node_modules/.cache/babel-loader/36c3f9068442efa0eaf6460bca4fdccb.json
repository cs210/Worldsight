{"ast":null,"code":"import _objectSpread from\"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Container,Message,Grid,Header,Input,Button}from'semantic-ui-react';import emailjs from'emailjs-com';import S3Upload from'react-s3-uploader/s3upload.js';import FileUploader from'./FileUploader';//params for uploading to S3.\nvar S3_BUCKET_URL='https://meshworks.s3.amazonaws.com/';var uploadOptions={server:'http://localhost:5000',s3path:S3_BUCKET_URL,signingUrl:\"/s3/sign\"};// params for sending out email.\nvar service_id=\"gmail\";var user_id=\"user_GPvH16KTRm7olTHDX1cdy\";var template_id=\"template_jPWa5xhn\";var UploadPage=/*#__PURE__*/function(_Component){_inherits(UploadPage,_Component);var _super=_createSuper(UploadPage);function UploadPage(){var _this;_classCallCheck(this,UploadPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={email:\"\",filesReady:[],submitCompleteMessage:false};_this.handleSubmitCompleteMessageDismiss=function(){_this.setState({submitCompleteMessage:false});};_this.handleChange=function(e){_this.setState({email:e.target.value});};_this.handleFileChangeStatus=function(file,status,allFiles){if(status=='done'){_this.state.filesReady.push(file);}};_this.onProgress=function(percent,status,file){console.log(\"Progress percent: \"+percent);};_this.onError=function(status,file){console.log(\"Error uploading: \"+status);};_this.onFinishS3Put=function(signResult,file){console.log(signResult,file);_this.setState({submitCompleteMessage:true});// If all files are done uploading\n};_this.uploadFiles=function(){var filesArray=_this.state.filesReady.map(function(item){return item.file;});var options=_objectSpread({files:filesArray,onFinishS3Put:_this.onFinishS3Put,onError:_this.onError,onProgress:_this.onProgress},uploadOptions);new S3Upload(options);};_this.sendEmail=function(){var template_params={\"reply_to\":_this.state.email};emailjs.send(service_id,template_id,template_params,user_id);};_this.submitEverything=function(){_this.uploadFiles();_this.sendEmail();};return _this;}_createClass(UploadPage,[{key:\"render\",value:function render(){var submitCompleteMessage=/*#__PURE__*/React.createElement(Message,{floating:true,onDismiss:this.handleSubmitCompleteMessageDismiss,header:\"Upload complete!\",content:\"Your files have been submitted for 3d magic! Check your inbox in a few minutes.\"});return/*#__PURE__*/React.createElement(Grid,{textAlign:\"center\"},/*#__PURE__*/React.createElement(Grid.Column,{style:{width:'60%'}},/*#__PURE__*/React.createElement(Header,{as:\"h1\"},\" Create your mesh today! \"),/*#__PURE__*/React.createElement(FileUploader,{onChangeStatus:this.handleFileChangeStatus}),/*#__PURE__*/React.createElement(Header,{as:\"h3\"},\" Where should we send this to later? \"),/*#__PURE__*/React.createElement(Input,{onChange:this.handleChange,defaultValue:\"youremail@example.com\"}),/*#__PURE__*/React.createElement(Container,{style:{marginTop:'5em'}},/*#__PURE__*/React.createElement(Button,{primary:true,onClick:this.submitEverything},\" UPLOAD! \"),this.state.submitCompleteMessage?submitCompleteMessage:null)));}}]);return UploadPage;}(Component);export default UploadPage;","map":{"version":3,"sources":["/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/src/components/UploadPage.js"],"names":["React","Component","Container","Message","Grid","Header","Input","Button","emailjs","S3Upload","FileUploader","S3_BUCKET_URL","uploadOptions","server","s3path","signingUrl","service_id","user_id","template_id","UploadPage","state","email","filesReady","submitCompleteMessage","handleSubmitCompleteMessageDismiss","setState","handleChange","e","target","value","handleFileChangeStatus","file","status","allFiles","push","onProgress","percent","console","log","onError","onFinishS3Put","signResult","uploadFiles","filesArray","map","item","options","files","sendEmail","template_params","send","submitEverything","width","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Container, Message, Grid, Header, Input, Button} from 'semantic-ui-react';\nimport emailjs from 'emailjs-com';\nimport S3Upload from 'react-s3-uploader/s3upload.js'\n\nimport FileUploader from './FileUploader'\n\n//params for uploading to S3.\nconst S3_BUCKET_URL= 'https://meshworks.s3.amazonaws.com/'\nconst uploadOptions = {\n  server: 'http://localhost:5000',\n  s3path: S3_BUCKET_URL,\n  signingUrl: \"/s3/sign\"\n}\n\n// params for sending out email.\nconst service_id = \"gmail\";\nconst user_id = \"user_GPvH16KTRm7olTHDX1cdy\"\nconst template_id = \"template_jPWa5xhn\";\n\nclass UploadPage extends Component {\n\n  state = {\n    email: \"\",\n    filesReady: [],\n    submitCompleteMessage: false\n  }\n\n  handleSubmitCompleteMessageDismiss = () => {\n    this.setState({submitCompleteMessage: false});\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  // This comes from the dropbox implementation.\n  handleFileChangeStatus = (file, status, allFiles) => {\n    if (status == 'done') {\n      this.state.filesReady.push(file)\n    }\n  }\n\n  onProgress = (percent, status, file) => {\n    console.log(\"Progress percent: \" + percent)\n  }\n\n  onError = (status, file) => {\n    console.log(\"Error uploading: \" + status)\n  }\n\n  onFinishS3Put = (signResult, file) => {\n    console.log(signResult, file)\n    this.setState({submitCompleteMessage: true});\n    // If all files are done uploading\n  }\n\n  uploadFiles = () => {\n    var filesArray = this.state.filesReady.map(function(item){ return item.file;});\n    const options = {\n      files: filesArray,\n      onFinishS3Put: this.onFinishS3Put,\n      onError: this.onError,\n      onProgress: this.onProgress,\n      ...uploadOptions,\n    }\n    new S3Upload(options);\n  }\n\n  sendEmail = () => {\n    var template_params = {\n     \"reply_to\": this.state.email,\n    }\n    emailjs.send(service_id, template_id, template_params, user_id)\n  }\n\n  submitEverything = () => {\n    this.uploadFiles();\n    this.sendEmail();\n  }\n\n  render() {\n    var submitCompleteMessage =\n      <Message floating\n        onDismiss={this.handleSubmitCompleteMessageDismiss}\n        header='Upload complete!'\n        content='Your files have been submitted for 3d magic! Check your inbox in a few minutes.'\n      />\n\n    return (\n      <Grid textAlign=\"center\">\n        <Grid.Column style={{width: '60%'}}>\n            <Header as='h1'> Create your mesh today! </Header>\n            <FileUploader\n              onChangeStatus={this.handleFileChangeStatus}/>\n            <Header as='h3'> Where should we send this to later? </Header>\n            <Input\n              onChange={this.handleChange}\n              defaultValue='youremail@example.com'\n            />\n            <Container style={{marginTop:'5em'}}>\n              <Button primary onClick={this.submitEverything}> UPLOAD! </Button>\n              {this.state.submitCompleteMessage ? submitCompleteMessage : null}\n\n            </Container>\n          </Grid.Column>\n      </Grid>\n\n    )\n  }\n}\n\nexport default UploadPage;\n"]},"metadata":{},"sourceType":"module"}