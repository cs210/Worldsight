{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { property } from 'lit-element';\nimport { $isElementInViewport, $needsRender, $onModelLoad, $progressTracker, $renderer, $scene } from '../model-viewer-base.js';\nimport { deserializeUrl } from '../utilities.js';\nexport var BASE_OPACITY = 0.1;\nvar DEFAULT_SHADOW_INTENSITY = 0.0;\nvar DEFAULT_SHADOW_SOFTNESS = 1.0;\nvar DEFAULT_EXPOSURE = 1.0;\nvar $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nvar $applyEnvironmentMap = Symbol('applyEnvironmentMap');\nvar $updateEnvironment = Symbol('updateEnvironment');\nvar $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\nexport var EnvironmentMixin = function EnvironmentMixin(ModelViewerElement) {\n  var _a, _b;\n\n  var EnvironmentModelViewerElement = /*#__PURE__*/function (_ModelViewerElement) {\n    _inherits(EnvironmentModelViewerElement, _ModelViewerElement);\n\n    var _super = _createSuper(EnvironmentModelViewerElement);\n\n    function EnvironmentModelViewerElement() {\n      var _this;\n\n      _classCallCheck(this, EnvironmentModelViewerElement);\n\n      _this = _super.apply(this, arguments);\n      _this.environmentImage = null;\n      _this.skyboxImage = null;\n      _this.shadowIntensity = DEFAULT_SHADOW_INTENSITY;\n      _this.shadowSoftness = DEFAULT_SHADOW_SOFTNESS;\n      _this.exposure = DEFAULT_EXPOSURE;\n      _this[_a] = null;\n      _this[_b] = null;\n      return _this;\n    }\n\n    _createClass(EnvironmentModelViewerElement, [{\n      key: \"updated\",\n      value: function updated(changedProperties) {\n        _get(_getPrototypeOf(EnvironmentModelViewerElement.prototype), \"updated\", this).call(this, changedProperties);\n\n        if (changedProperties.has('shadowIntensity')) {\n          this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n          this[$needsRender]();\n        }\n\n        if (changedProperties.has('shadowSoftness')) {\n          this[$scene].setShadowSoftness(this.shadowSoftness);\n          this[$needsRender]();\n        }\n\n        if (changedProperties.has('exposure')) {\n          this[$scene].exposure = this.exposure;\n          this[$needsRender]();\n        }\n\n        if (changedProperties.has('environmentImage') || changedProperties.has('skyboxImage') || changedProperties.has($isElementInViewport)) {\n          this[$updateEnvironment]();\n        }\n      }\n    }, {\n      key: (_a = $currentEnvironmentMap, _b = $cancelEnvironmentUpdate, $onModelLoad),\n      value: function value(event) {\n        _get(_getPrototypeOf(EnvironmentModelViewerElement.prototype), $onModelLoad, this).call(this, event);\n\n        if (this[$currentEnvironmentMap] != null) {\n          this[$applyEnvironmentMap](this[$currentEnvironmentMap]);\n        }\n      }\n    }, {\n      key: $updateEnvironment,\n      value: function () {\n        var _value = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var _this2 = this;\n\n          var skyboxImage, environmentImage, textureUtils, _yield$Promise, environmentMap, skybox, _yield$errorOrPromise, _environmentMap, _skybox;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (this[$isElementInViewport]) {\n                    _context2.next = 2;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 2:\n                  skyboxImage = this.skyboxImage, environmentImage = this.environmentImage;\n\n                  if (this[$cancelEnvironmentUpdate] != null) {\n                    this[$cancelEnvironmentUpdate]();\n                    this[$cancelEnvironmentUpdate] = null;\n                  }\n\n                  textureUtils = this[$renderer].textureUtils;\n\n                  if (!(textureUtils == null)) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 7:\n                  _context2.prev = 7;\n                  _context2.next = 10;\n                  return new Promise( /*#__PURE__*/function () {\n                    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n                      var texturesLoad;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              texturesLoad = textureUtils.generateEnvironmentMapAndSkybox(skyboxImage, environmentImage, {\n                                progressTracker: _this2[$progressTracker]\n                              });\n\n                              _this2[$cancelEnvironmentUpdate] = function () {\n                                return reject(texturesLoad);\n                              };\n\n                              _context.t0 = resolve;\n                              _context.next = 5;\n                              return texturesLoad;\n\n                            case 5:\n                              _context.t1 = _context.sent;\n                              (0, _context.t0)(_context.t1);\n\n                            case 7:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x, _x2) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n\n                case 10:\n                  _yield$Promise = _context2.sent;\n                  environmentMap = _yield$Promise.environmentMap;\n                  skybox = _yield$Promise.skybox;\n\n                  if (skybox != null) {\n                    this[$scene].background = skybox.texture;\n                  } else {\n                    this[$scene].background = null;\n                  }\n\n                  this[$applyEnvironmentMap](environmentMap.texture);\n                  this[$scene].model.dispatchEvent({\n                    type: 'envmap-update'\n                  });\n                  _context2.next = 30;\n                  break;\n\n                case 18:\n                  _context2.prev = 18;\n                  _context2.t0 = _context2[\"catch\"](7);\n\n                  if (!(_context2.t0 instanceof Error)) {\n                    _context2.next = 23;\n                    break;\n                  }\n\n                  this[$applyEnvironmentMap](null);\n                  throw _context2.t0;\n\n                case 23:\n                  _context2.next = 25;\n                  return _context2.t0;\n\n                case 25:\n                  _yield$errorOrPromise = _context2.sent;\n                  _environmentMap = _yield$errorOrPromise.environmentMap;\n                  _skybox = _yield$errorOrPromise.skybox;\n\n                  if (_environmentMap != null) {\n                    _environmentMap.dispose();\n                  }\n\n                  if (_skybox != null) {\n                    _skybox.dispose();\n                  }\n\n                case 30:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this, [[7, 18]]);\n        }));\n\n        function value() {\n          return _value.apply(this, arguments);\n        }\n\n        return value;\n      }()\n      /**\n       * Sets the Model to use the provided environment map,\n       * or `null` if the Model should remove its' environment map.\n       */\n\n    }, {\n      key: $applyEnvironmentMap,\n      value: function value(environmentMap) {\n        this[$currentEnvironmentMap] = environmentMap;\n        this[$scene].environment = this[$currentEnvironmentMap];\n        this.dispatchEvent(new CustomEvent('environment-change'));\n        this[$needsRender]();\n      }\n    }]);\n\n    return EnvironmentModelViewerElement;\n  }(ModelViewerElement);\n\n  __decorate([property({\n    type: String,\n    attribute: 'environment-image',\n    converter: {\n      fromAttribute: deserializeUrl\n    }\n  })], EnvironmentModelViewerElement.prototype, \"environmentImage\", void 0);\n\n  __decorate([property({\n    type: String,\n    attribute: 'skybox-image',\n    converter: {\n      fromAttribute: deserializeUrl\n    }\n  })], EnvironmentModelViewerElement.prototype, \"skyboxImage\", void 0);\n\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-intensity'\n  })], EnvironmentModelViewerElement.prototype, \"shadowIntensity\", void 0);\n\n  __decorate([property({\n    type: Number,\n    attribute: 'shadow-softness'\n  })], EnvironmentModelViewerElement.prototype, \"shadowSoftness\", void 0);\n\n  __decorate([property({\n    type: Number\n  })], EnvironmentModelViewerElement.prototype, \"exposure\", void 0);\n\n  return EnvironmentModelViewerElement;\n};","map":{"version":3,"sources":["../../src/features/environment.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\nimport {Texture} from 'three';\n\nimport ModelViewerElementBase, {$isElementInViewport, $needsRender, $onModelLoad, $progressTracker, $renderer, $scene} from '../model-viewer-base.js';\nimport {Constructor, deserializeUrl} from '../utilities.js';\n\nexport const BASE_OPACITY = 0.1;\nconst DEFAULT_SHADOW_INTENSITY = 0.0;\nconst DEFAULT_SHADOW_SOFTNESS = 1.0;\nconst DEFAULT_EXPOSURE = 1.0;\n\nconst $currentEnvironmentMap = Symbol('currentEnvironmentMap');\nconst $applyEnvironmentMap = Symbol('applyEnvironmentMap');\nconst $updateEnvironment = Symbol('updateEnvironment');\nconst $cancelEnvironmentUpdate = Symbol('cancelEnvironmentUpdate');\n\nexport declare interface EnvironmentInterface {\n  environmentImage: string|null;\n  skyboxImage: string|null;\n  shadowIntensity: number;\n  shadowSoftness: number;\n  exposure: number;\n}\n\nexport const EnvironmentMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<EnvironmentInterface>&T => {\n  class EnvironmentModelViewerElement extends ModelViewerElement {\n    @property({\n      type: String,\n      attribute: 'environment-image',\n      converter: {fromAttribute: deserializeUrl}\n    })\n    environmentImage: string|null = null;\n\n    @property({\n      type: String,\n      attribute: 'skybox-image',\n      converter: {fromAttribute: deserializeUrl}\n    })\n    skyboxImage: string|null = null;\n\n    @property({type: Number, attribute: 'shadow-intensity'})\n    shadowIntensity: number = DEFAULT_SHADOW_INTENSITY;\n\n    @property({type: Number, attribute: 'shadow-softness'})\n    shadowSoftness: number = DEFAULT_SHADOW_SOFTNESS;\n\n    @property({\n      type: Number,\n    })\n    exposure: number = DEFAULT_EXPOSURE;\n\n    private[$currentEnvironmentMap]: Texture|null = null;\n\n    private[$cancelEnvironmentUpdate]: ((...args: any[]) => any)|null = null;\n\n    updated(changedProperties: Map<string|number|symbol, unknown>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('shadowIntensity')) {\n        this[$scene].setShadowIntensity(this.shadowIntensity * BASE_OPACITY);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('shadowSoftness')) {\n        this[$scene].setShadowSoftness(this.shadowSoftness);\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('exposure')) {\n        this[$scene].exposure = this.exposure;\n        this[$needsRender]();\n      }\n\n      if (changedProperties.has('environmentImage') ||\n          changedProperties.has('skyboxImage') ||\n          changedProperties.has($isElementInViewport)) {\n        this[$updateEnvironment]();\n      }\n    }\n\n    [$onModelLoad](event: any) {\n      super[$onModelLoad](event);\n\n      if (this[$currentEnvironmentMap] != null) {\n        this[$applyEnvironmentMap](this[$currentEnvironmentMap]);\n      }\n    }\n\n    async[$updateEnvironment]() {\n      if (!this[$isElementInViewport]) {\n        return;\n      }\n\n      const {skyboxImage, environmentImage} = this;\n\n      if (this[$cancelEnvironmentUpdate] != null) {\n        this[$cancelEnvironmentUpdate]!();\n        this[$cancelEnvironmentUpdate] = null;\n      }\n\n      const {textureUtils} = this[$renderer];\n\n      if (textureUtils == null) {\n        return;\n      }\n\n      try {\n        const {environmentMap, skybox} =\n            await new Promise(async (resolve, reject) => {\n              const texturesLoad = textureUtils.generateEnvironmentMapAndSkybox(\n                  skyboxImage,\n                  environmentImage,\n                  {progressTracker: this[$progressTracker]});\n              this[$cancelEnvironmentUpdate] = () => reject(texturesLoad);\n              resolve(await texturesLoad);\n            });\n\n        if (skybox != null) {\n          this[$scene].background = skybox.texture;\n        } else {\n          this[$scene].background = null;\n        }\n\n        this[$applyEnvironmentMap](environmentMap.texture);\n        this[$scene].model.dispatchEvent({type: 'envmap-update'});\n      } catch (errorOrPromise) {\n        if (errorOrPromise instanceof Error) {\n          this[$applyEnvironmentMap](null);\n          throw errorOrPromise;\n        }\n\n        const {environmentMap, skybox} = await errorOrPromise;\n\n        if (environmentMap != null) {\n          environmentMap.dispose();\n        }\n\n        if (skybox != null) {\n          skybox.dispose();\n        }\n      }\n    }\n\n    /**\n     * Sets the Model to use the provided environment map,\n     * or `null` if the Model should remove its' environment map.\n     */\n    private[$applyEnvironmentMap](environmentMap: Texture|null) {\n      this[$currentEnvironmentMap] = environmentMap;\n      this[$scene].environment = this[$currentEnvironmentMap];\n      this.dispatchEvent(new CustomEvent('environment-change'));\n\n      this[$needsRender]();\n    }\n  }\n\n  return EnvironmentModelViewerElement;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}