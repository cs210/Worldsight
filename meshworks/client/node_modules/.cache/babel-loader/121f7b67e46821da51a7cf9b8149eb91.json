{"ast":null,"code":"import _classCallCheck from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/aakankshasaxena/Documents/Junior/Meshworks/Worldsight/meshworks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PBRMetallicRoughness } from './pbr-metallic-roughness.js';\nimport { ThreeDOMElement } from './three-dom-element.js';\nvar $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\n/**\n * Material facade implementation for Three.js materials\n */\n\nexport var Material = /*#__PURE__*/function (_ThreeDOMElement) {\n  _inherits(Material, _ThreeDOMElement);\n\n  var _super = _createSuper(Material);\n\n  function Material(graft, material) {\n    var _this;\n\n    _classCallCheck(this, Material);\n\n    _this = _super.call(this, graft, material);\n    _this[$pbrMetallicRoughness] = new PBRMetallicRoughness(graft, material);\n    return _this;\n  }\n\n  _createClass(Material, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var serialized = _get(_getPrototypeOf(Material.prototype), \"toJSON\", this).call(this);\n\n      serialized.pbrMetallicRoughness = this.pbrMetallicRoughness.toJSON();\n      return serialized;\n    }\n  }, {\n    key: \"pbrMetallicRoughness\",\n    get: function get() {\n      return this[$pbrMetallicRoughness];\n    }\n  }]);\n\n  return Material;\n}(ThreeDOMElement);","map":{"version":3,"sources":["../../../src/facade/three-js/material.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAqBA,SAAQ,oBAAR,QAAmC,6BAAnC;AACA,SAAQ,eAAR,QAA8B,wBAA9B;AAGA,IAAM,qBAAqB,GAAG,MAAM,CAAC,sBAAD,CAApC;AAEA;;;;AAGA,WAAa,QAAb;AAAA;;AAAA;;AAGE,oBAAY,KAAZ,EAA+B,QAA/B,EAAsD;AAAA;;AAAA;;AACpD,8BAAM,KAAN,EAAa,QAAb;AAEA,UAAK,qBAAL,IAA8B,IAAI,oBAAJ,CAAyB,KAAzB,EAAgC,QAAhC,CAA9B;AAHoD;AAIrD;;AAPH;AAAA;AAAA,6BAaQ;AACJ,UAAM,UAAU,uEAAhB;;AACA,MAAA,UAAU,CAAC,oBAAX,GAAkC,KAAK,oBAAL,CAA0B,MAA1B,EAAlC;AACA,aAAO,UAAP;AACD;AAjBH;AAAA;AAAA,wBAS0B;AACtB,aAAO,KAAK,qBAAL,CAAP;AACD;AAXH;;AAAA;AAAA,EAA8B,eAA9B","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Material as ThreeMaterial} from 'three';\n\nimport {SerializedMaterial} from '../../protocol.js';\nimport {Material as MaterialInterface} from '../api.js';\n\nimport {ModelGraft} from './model-graft.js';\nimport {PBRMetallicRoughness} from './pbr-metallic-roughness.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Material extends ThreeDOMElement implements MaterialInterface {\n  private[$pbrMetallicRoughness]: PBRMetallicRoughness;\n\n  constructor(graft: ModelGraft, material: ThreeMaterial) {\n    super(graft, material);\n\n    this[$pbrMetallicRoughness] = new PBRMetallicRoughness(graft, material);\n  }\n\n  get pbrMetallicRoughness() {\n    return this[$pbrMetallicRoughness];\n  }\n\n  toJSON(): SerializedMaterial {\n    const serialized: Partial<SerializedMaterial> = super.toJSON();\n    serialized.pbrMetallicRoughness = this.pbrMetallicRoughness.toJSON();\n    return serialized as SerializedMaterial;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}