{"version":3,"sources":["components/Feed.js","components/Navigator.js","components/TodoInput.js","components/ListTodo.js","components/Todo.js","components/EmailSenderTest.js","components/Tester.js","components/FileUploader.js","components/UploadPage.js","components/ThemingLayout.js","components/MeshPage.js","App.js","serviceWorker.js","index.js"],"names":["Feed","Container","text","style","marginTop","Component","Navigator","Menu","borderless","fixed","inverted","Item","Header","as","Link","to","className","weight","position","Button","primary","animated","Content","visible","hidden","Icon","name","Search","TodoInput","state","action","addTodo","task","length","axios","post","then","res","data","props","getTodos","setState","catch","err","console","log","handleChange","e","target","value","this","Input","onClick","color","actionPosition","content","type","onChange","ListTodo","todos","deleteTodo","List","map","todo","key","_id","Todo","get","id","delete","size","user_id","EmailSenderTest","email","sendEmail","template_params","emailjs","send","defaultValue","Tester","Grid","textAlign","height","verticalAlign","Column","maxWidth","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","FileUploader","autoUpload","onChangeStatus","LayoutComponent","SubmitButtonDisabled","inputContent","uploadOptions","server","s3path","signingUrl","UploadPage","filesReady","submitCompleteMessage","handleSubmitCompleteMessageDismiss","handleFileChangeStatus","file","status","allFiles","push","onProgress","percent","onError","onFinishS3Put","signResult","uploadFiles","filesArray","item","options","S3Upload","submitEverything","Message","floating","onDismiss","header","width","ThemingLayout","dividing","columns","stackable","href","title","centered","padded","margin","doubling","items","pointing","secondary","tabular","basic","compact","Divider","icon","labelPosition","Group","disabled","loading","Or","attached","widths","Segment","Image","src","marginBottom","MeshPage","divided","Row","shadow-intensity","auto-rotate","camera-controls","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ce8dc853.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {Container} from 'semantic-ui-react'\n\nclass Feed extends Component {\n\n  render() {\n    return (\n      <div>\n        <Container text style={{ marginTop: '7em' }}>\n          This will be the feed.\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Feed;\n","import React from \"react\";\nimport \"@google/model-viewer\";\n\nimport {\n  Menu,\n  Header,\n  Container,\n  Button,\n  Search,\n  Icon,\n  Image,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigator = () => {\n  return (\n    <div>\n      <Menu borderless fixed=\"top\" inverted>\n        <Menu.Item>\n          <Header as={Link} to=\"/\" className=\"logo\" weight=\"900\">\n            {\" \"}\n            MESHWORKS!{\" \"}\n          </Header>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <Button primary animated=\"vertical\" as={Link} to=\"/upload\">\n              <Button.Content visible> UPLOAD </Button.Content>\n              <Button.Content hidden>\n                {\" \"}\n                <Icon name=\"arrow alternate circle up outline\" />{\" \"}\n              </Button.Content>\n            </Button>\n          </Menu.Item>\n          <Menu.Item>\n            <Button as={Link} to=\"/mesh\">\n              Meshes\n            </Button>\n          </Menu.Item>\n          <Menu.Item>\n            <Button as={Link} to=\"/tests\">\n              Testpage\n            </Button>\n          </Menu.Item>\n          <Menu.Item>\n            <Button as={Link} to=\"/theming\">\n              Theme\n            </Button>\n          </Menu.Item>\n          <Menu.Item>\n            <Search />\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    </div>\n  );\n};\n\nexport default Navigator;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Input } from 'semantic-ui-react'\n\nclass TodoInput extends Component {\n  state = {\n    action: \"\"\n  }\n\n  addTodo = () => {\n    const task = {action: this.state.action}\n    if(task.action && task.action.length > 0){\n      axios.post('/api/todos', task)\n        .then(res => {\n          if(res.data){\n            this.props.getTodos();\n            this.setState({action: \"\"});\n          }\n        })\n        .catch(err => console.log(err));\n    }else {\n      console.log('input field required');\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      action: e.target.value\n    });\n  }\n\n  render() {\n    let {action} = this.state;\n    return (\n      <div>\n          <Input action={{\n            onClick: this.addTodo,\n            color: 'primary',\n            actionPosition: 'right',\n            content: \"Add Todo\"\n          }}\n          type=\"text\" onChange={this.handleChange} value={action} />\n      </div>\n    )\n  }\n\n}\n\nexport default TodoInput\n","import React from 'react';\nimport {List} from 'semantic-ui-react'\n\nconst ListTodo = ({ todos, deleteTodo }) => {\n  return (\n    <List>\n      {\n        todos &&\n          todos.length > 0 ?\n          (\n            todos.map(todo => {\n              return (\n                <List.Item >\n                  <List.Icon name='angle right'/>\n                  <List.Content key={todo._id} onClick={() => deleteTodo(todo._id)}>\n                    {todo.action}\n                  </List.Content>\n                </List.Item>\n              )\n            })\n          )\n          :\n          (\n            <li>No todos left</li>\n          )\n      }\n    </List>\n  )\n}\n\nexport default ListTodo;\n","import React, {Component} from 'react';\nimport axios from 'axios';\n\nimport TodoInput from './TodoInput';\nimport ListTodo from './ListTodo';\n\nimport {Header} from 'semantic-ui-react'\n\nclass Todo extends Component {\n\n  state = {\n    todos: []\n  }\n\n  componentDidMount(){\n    this.getTodos();\n  }\n\n  getTodos = () => {\n    axios.get('/api/todos')\n      .then(res => {\n        if(res.data){\n          this.setState({\n            todos: res.data\n          })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  deleteTodo = (id) => {\n\n    axios.delete(`/api/todos/${id}`)\n      .then(res => {\n        if(res.data){\n          this.getTodos()\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    let { todos } = this.state;\n\n    return(\n      <div>\n        <Header size='huge' >My Todo(s)</Header>\n        <TodoInput getTodos={this.getTodos}/>\n        <ListTodo todos={todos} deleteTodo={this.deleteTodo}/>\n      </div>\n    )\n  }\n}\n\nexport default Todo;\n","import React, {Component} from 'react';\n\nimport {Header, Input} from 'semantic-ui-react';\nimport emailjs from 'emailjs-com';\n\nconst service_id = \"gmail\";\nconst user_id = \"user_GPvH16KTRm7olTHDX1cdy\"\nconst template_id = \"template_jPWa5xhn\";\n\nclass EmailSenderTest extends Component {\n\n  state = {\n    email: \"\"\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  sendEmail = () => {\n    var template_params = {\n     \"reply_to\": this.state.email,\n    }\n    emailjs.send(service_id, template_id, template_params, user_id)\n  }\n\n  render() {\n\n    return (\n      <div>\n      <Header as='h1'> Send Email Test </Header>\n      <Input\n        onChange={this.handleChange}\n        action={{\n          onClick: this.sendEmail,\n          color: 'primary',\n          actionPosition: 'right',\n          content: 'Send Email',\n        }}\n        defaultValue='worldsightvr@gmail.com'\n      />\n      </div>\n    )\n  }\n}\n\nexport default EmailSenderTest;\n","import React, {Component} from 'react';\n\nimport Todo from './Todo.js';\nimport EmailSenderTest from './EmailSenderTest.js';\n\nimport {Grid } from 'semantic-ui-react';\n\nclass Tester extends Component {\n\n  render() {\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Todo/>\n          <EmailSenderTest/>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default Tester;\n","import React, {Component} from 'react';\nimport {Container, Button, Grid, Header} from 'semantic-ui-react';\nimport Dropzone, {SubmitButton, resolveValue, fileWithMeta} from 'react-dropzone-uploader'\n\n\nconst S3_BUCKET_URL= 'https://meshworks.s3.amazonaws.com/'\n\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }) => {\n\n  return (\n    <div>\n      <div {...dropzoneProps}>\n        {previews}\n        {files.length < maxFiles && input}\n      </div>\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nclass FileUploader extends Component{\n\n  render () {\n    return(\n      <Container>\n        <Dropzone\n          autoUpload = {false}\n          onChangeStatus={this.props.onChangeStatus}\n          LayoutComponent={Layout}\n          SubmitButtonDisabled = {true}\n          inputContent=\"Drop Files Here\"\n        />\n      </Container>\n    )\n  }\n}\n\nexport default FileUploader;\n","import React, {Component} from 'react';\nimport {Container, Message, Grid, Header, Input, Button} from 'semantic-ui-react';\nimport emailjs from 'emailjs-com';\nimport S3Upload from 'react-s3-uploader/s3upload.js'\n\nimport FileUploader from './FileUploader'\n\n//params for uploading to S3.\nconst S3_BUCKET_URL= 'https://meshworks.s3.amazonaws.com/'\nconst uploadOptions = {\n  server: 'http://localhost:5000',\n  s3path: S3_BUCKET_URL,\n  signingUrl: \"/s3/sign\"\n}\n\n// params for sending out email.\nconst service_id = \"gmail\";\nconst user_id = \"user_GPvH16KTRm7olTHDX1cdy\"\nconst template_id = \"template_jPWa5xhn\";\n\nclass UploadPage extends Component {\n\n  state = {\n    email: \"\",\n    filesReady: [],\n    submitCompleteMessage: false\n  }\n\n  handleSubmitCompleteMessageDismiss = () => {\n    this.setState({submitCompleteMessage: false});\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  // This comes from the dropbox implementation.\n  handleFileChangeStatus = (file, status, allFiles) => {\n    if (status == 'done') {\n      this.state.filesReady.push(file)\n    }\n  }\n\n  onProgress = (percent, status, file) => {\n    console.log(\"Progress percent: \" + percent)\n  }\n\n  onError = (status, file) => {\n    console.log(\"Error uploading: \" + status)\n  }\n\n  onFinishS3Put = (signResult, file) => {\n    console.log(signResult, file)\n    this.setState({submitCompleteMessage: true});\n    // If all files are done uploading\n  }\n\n  uploadFiles = () => {\n    var filesArray = this.state.filesReady.map(function(item){ return item.file;});\n    const options = {\n      files: filesArray,\n      onFinishS3Put: this.onFinishS3Put,\n      onError: this.onError,\n      onProgress: this.onProgress,\n      ...uploadOptions,\n    }\n    new S3Upload(options);\n  }\n\n  sendEmail = () => {\n    var template_params = {\n     \"reply_to\": this.state.email,\n    }\n    emailjs.send(service_id, template_id, template_params, user_id)\n  }\n\n  submitEverything = () => {\n    this.uploadFiles();\n    this.sendEmail();\n  }\n\n  render() {\n    var submitCompleteMessage =\n      <Message floating\n        onDismiss={this.handleSubmitCompleteMessageDismiss}\n        header='Upload complete!'\n        content='Your files have been submitted for 3d magic! Check your inbox in a few minutes.'\n      />\n\n    return (\n      <Grid textAlign=\"center\">\n        <Grid.Column style={{width: '60%'}}>\n            <Header as='h1'> Create your mesh today! </Header>\n            <FileUploader\n              onChangeStatus={this.handleFileChangeStatus}/>\n            <Header as='h3'> Where should we send this to later? </Header>\n            <Input\n              onChange={this.handleChange}\n              defaultValue='youremail@example.com'\n            />\n            <Container style={{marginTop:'5em'}}>\n              <Button primary onClick={this.submitEverything}> UPLOAD! </Button>\n              {this.state.submitCompleteMessage ? submitCompleteMessage : null}\n\n            </Container>\n          </Grid.Column>\n      </Grid>\n\n    )\n  }\n}\n\nexport default UploadPage;\n","import React from 'react'\nimport { Button, Container, Divider, Grid, Header, Image, Menu, Segment } from 'semantic-ui-react'\n\nconst ThemingLayout = () => (\n  <Container style={{ marginTop: '3em' }}>\n    <Header as='h1'>Theming Examples</Header>\n\n    <Header as='h2' dividing>\n      Site\n    </Header>\n\n    <Grid columns={3} stackable>\n      <Grid.Column>\n        <Header as='h1'>Heading 1</Header>\n        <Header as='h2'>Heading 2</Header>\n        <Header as='h3'>Heading 3</Header>\n        <Header as='h4'>Heading 4</Header>\n        <Header as='h5'>Heading 5</Header>\n\n        <p>\n          Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et\n          magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies\n          vehicula.\n        </p>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Header as='h2'>Example body text</Header>\n\n        <p>\n          Nullam quis risus eget <a href='#'>urna mollis ornare</a> vel eu leo. Cum sociis natoque\n          penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh\n          ultricies vehicula.\n        </p>\n        <p>\n          <small>This line of text is meant to be treated as fine print.</small>\n        </p>\n        <p>\n          The following snippet of text is <strong>rendered as bold text</strong>.\n        </p>\n        <p>\n          The following snippet of text is <em>rendered as italicized text</em>.\n        </p>\n        <p>\n          An abbreviation of the word attribute is <abbr title='attribute'>attr</abbr>.\n        </p>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Grid\n          centered\n          columns={3}\n          padded\n          stackable\n          style={{ margin: '-1.5em', width: 400 }}\n          textAlign='center'\n        >\n          <Grid.Column color='red' style={{ margin: '0.5em', height: 50 }}>\n            Red\n          </Grid.Column>\n          <Grid.Column color='orange' style={{ margin: '0.5em', height: 50 }}>\n            Orange\n          </Grid.Column>\n          <Grid.Column color='yellow' style={{ margin: '0.5em', height: 50 }}>\n            Yellow\n          </Grid.Column>\n          <Grid.Column color='olive' style={{ margin: '0.5em', height: 50 }}>\n            Olive\n          </Grid.Column>\n          <Grid.Column color='green' style={{ margin: '0.5em', height: 50 }}>\n            Green\n          </Grid.Column>\n          <Grid.Column color='teal' style={{ margin: '0.5em', height: 50 }}>\n            Teal\n          </Grid.Column>\n          <Grid.Column color='blue' style={{ margin: '0.5em', height: 50 }}>\n            Blue\n          </Grid.Column>\n          <Grid.Column color='violet' style={{ margin: '0.5em', height: 50 }}>\n            Violet\n          </Grid.Column>\n          <Grid.Column color='purple' style={{ margin: '0.5em', height: 50 }}>\n            Purple\n          </Grid.Column>\n          <Grid.Column color='pink' style={{ margin: '0.5em', height: 50 }}>\n            Pink\n          </Grid.Column>\n          <Grid.Column color='brown' style={{ margin: '0.5em', height: 50 }}>\n            Brown\n          </Grid.Column>\n          <Grid.Column color='grey' style={{ margin: '0.5em', height: 50 }}>\n            Grey\n          </Grid.Column>\n          <Grid.Column color='black' style={{ margin: '0.5em', height: 50 }}>\n            Black\n          </Grid.Column>\n        </Grid>\n      </Grid.Column>\n    </Grid>\n\n    <Header as='h2' dividing>\n      Menu\n    </Header>\n\n    <Grid columns={3} doubling>\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: '1', name: 'link-1', content: 'Link' },\n            { key: '2', name: 'link-2', content: 'Link' },\n            { key: '3', name: 'link-3', content: 'Link' },\n          ]}\n          pointing\n          secondary\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: '1', name: 'link-1', content: 'Link' },\n            { key: '2', name: 'link-2', content: 'Link' },\n            { key: '3', name: 'link-3', content: 'Link' },\n          ]}\n          pointing\n          tabular\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Menu\n          items={[\n            { key: 'l1', name: 'link-1', content: 'Link' },\n            { key: 'l2', name: 'link-2', content: 'Link' },\n            { key: 't1', name: 'text-1', content: 'Right text', position: 'right' },\n          ]}\n          pointing\n        />\n      </Grid.Column>\n    </Grid>\n\n    <Header as='h2' dividing>\n      Buttons\n    </Header>\n\n    <Grid columns='equal'>\n      <Grid.Column>\n        <Button>Default</Button>\n        <Button primary>Primary</Button>\n        <Button secondary>Secondary</Button>\n        <Button basic>Basic</Button>\n        <Button compact>Compact</Button>\n\n        <Divider />\n\n        <Button icon='heart' />\n        <Button content='Labeled' icon='heart' labelPosition='left' />\n        <Button content='Labeled' icon='heart' labelPosition='right' />\n\n        <Divider />\n\n        <Button.Group>\n          <Button>Combo</Button>\n        </Button.Group>\n\n        <Divider />\n\n        <Button animated>\n          <Button.Content visible>Horizontal</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n        <Button animated='vertical'>\n          <Button.Content visible>Vertical</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n        <Button animated='fade'>\n          <Button.Content visible>Fade In</Button.Content>\n          <Button.Content hidden>Hidden</Button.Content>\n        </Button>\n\n        <Divider />\n\n        <Button disabled>Disabled</Button>\n        <Button loading>Loading</Button>\n\n        <Divider />\n\n        <Button.Group>\n          <Button>1</Button>\n          <Button>2</Button>\n          <Button>3</Button>\n        </Button.Group>\n\n        <Button.Group>\n          <Button icon='align left' />\n          <Button icon='align center' />\n          <Button icon='align right' />\n          <Button icon='align justify' />\n        </Button.Group>\n\n        <Button.Group>\n          <Button>1</Button>\n          <Button.Or />\n          <Button>2</Button>\n        </Button.Group>\n\n        <Divider />\n\n        <Button.Group attached='top' widths={2}>\n          <Button>One</Button>\n          <Button>Two</Button>\n        </Button.Group>\n        <Segment attached>\n          <Image src='/images/wireframe/paragraph.png' />\n        </Segment>\n        <Button.Group attached='bottom' widths={2}>\n          <Button>One</Button>\n          <Button>Two</Button>\n        </Button.Group>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Button size='mini'>Mini</Button>\n        <Button size='tiny'>Tiny</Button>\n        <Button size='small'>Small</Button>\n        <Button size='large'>Large</Button>\n        <Button size='big'>Big</Button>\n        <Button size='huge'>Huge</Button>\n        <Button size='massive'>Massive</Button>\n\n        <Divider />\n\n        <Button color='yellow' style={{ marginBottom: '1em' }}>\n          Yellow\n        </Button>\n        <Button color='orange' style={{ marginBottom: '1em' }}>\n          Orange\n        </Button>\n        <Button color='green' style={{ marginBottom: '1em' }}>\n          Green\n        </Button>\n        <Button color='teal' style={{ marginBottom: '1em' }}>\n          Teal\n        </Button>\n        <Button color='blue' style={{ marginBottom: '1em' }}>\n          Blue\n        </Button>\n        <Button color='purple' style={{ marginBottom: '1em' }}>\n          Purple\n        </Button>\n        <Button color='pink' style={{ marginBottom: '1em' }}>\n          Pink\n        </Button>\n        <Button color='red' style={{ marginBottom: '1em' }}>\n          Red\n        </Button>\n        <Button color='black' style={{ marginBottom: '1em' }}>\n          Black\n        </Button>\n\n        <Divider />\n\n        <Segment inverted>\n          <Button inverted>Inverted</Button>\n          <Button basic inverted>\n            Basic\n          </Button>\n          <Button color='blue' inverted>\n            Colored\n          </Button>\n          <Button basic color='blue' inverted>\n            Basic Colored\n          </Button>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  </Container>\n)\n\nexport default ThemingLayout\n","import React, {Component} from 'react';\nimport \"@google/model-viewer\";\n\nimport {Container, Grid, Header} from 'semantic-ui-react';\n\nclass MeshPage extends Component {\n\n  render() {\n    return (\n      <Grid divided='vertically'>\n        <Grid.Row columns={2}>\n          <Grid.Column textAlign='right'>\n            <Header as='h1'> Congratulations, your mesh is ready! </Header>\n            <Header as='h2'> Here is your result: </Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Container>\n              <model-viewer\n                  src=\"https://meshworks.s3.amazonaws.com/glb-files/out.glb\"\n                  shadow-intensity=\"1\"\n                  style={{width:\"70%\", height:\"50em\"}}\n                  auto-rotate\n                  camera-controls\n                ></model-viewer>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n    )\n  }\n}\n\nexport default MeshPage;\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport {Container} from 'semantic-ui-react'\n\nimport 'semantic-ui-less/semantic.less'\nimport Feed from './components/Feed';\nimport Navigator from './components/Navigator';\nimport Tester from './components/Tester';\nimport UploadPage from './components/UploadPage';\nimport ThemingLayout from './components/ThemingLayout';\nimport MeshPage from './components/MeshPage';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Navigator />\n        <Container style={{ marginTop: '7em' }}>\n          <Route exact path='/' component={Feed} />\n          <Route path='/tests' component={Tester} />\n          <Route path='/theming' component={ThemingLayout} />\n          <Route path='/upload' component={UploadPage} />\n          <Route path='/mesh' component={MeshPage} />\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}